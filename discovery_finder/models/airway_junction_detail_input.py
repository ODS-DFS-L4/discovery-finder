from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from discovery_finder.models.base_model import Model
from discovery_finder.models.airway_geometry import AirwayGeometry
from discovery_finder.models.deviation import Deviation
from discovery_finder import util

from discovery_finder.models.airway_geometry import AirwayGeometry  # noqa: E501
from discovery_finder.models.deviation import Deviation  # noqa: E501

class AirwayJunctionDetailInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, airway=None, deviation=None):  # noqa: E501
        """AirwayJunctionDetailInput - a model defined in OpenAPI

        :param airway: The airway of this AirwayJunctionDetailInput.  # noqa: E501
        :type airway: AirwayGeometry
        :param deviation: The deviation of this AirwayJunctionDetailInput.  # noqa: E501
        :type deviation: Deviation
        """
        self.openapi_types = {
            'airway': AirwayGeometry,
            'deviation': Deviation
        }

        self.attribute_map = {
            'airway': 'airway',
            'deviation': 'deviation'
        }

        self._airway = airway
        self._deviation = deviation

    @classmethod
    def from_dict(cls, dikt) -> 'AirwayJunctionDetailInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AirwayJunctionDetail-Input of this AirwayJunctionDetailInput.  # noqa: E501
        :rtype: AirwayJunctionDetailInput
        """
        return util.deserialize_model(dikt, cls)

    @property
    def airway(self) -> AirwayGeometry:
        """Gets the airway of this AirwayJunctionDetailInput.


        :return: The airway of this AirwayJunctionDetailInput.
        :rtype: AirwayGeometry
        """
        return self._airway

    @airway.setter
    def airway(self, airway: AirwayGeometry):
        """Sets the airway of this AirwayJunctionDetailInput.


        :param airway: The airway of this AirwayJunctionDetailInput.
        :type airway: AirwayGeometry
        """
        if airway is None:
            raise ValueError("Invalid value for `airway`, must not be `None`")  # noqa: E501

        self._airway = airway

    @property
    def deviation(self) -> Deviation:
        """Gets the deviation of this AirwayJunctionDetailInput.


        :return: The deviation of this AirwayJunctionDetailInput.
        :rtype: Deviation
        """
        return self._deviation

    @deviation.setter
    def deviation(self, deviation: Deviation):
        """Sets the deviation of this AirwayJunctionDetailInput.


        :param deviation: The deviation of this AirwayJunctionDetailInput.
        :type deviation: Deviation
        """
        if deviation is None:
            raise ValueError("Invalid value for `deviation`, must not be `None`")  # noqa: E501

        self._deviation = deviation
