from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from discovery_finder.models.base_model import Model
from discovery_finder.models.drone_port_details import DronePortDetails
from discovery_finder import util

from discovery_finder.models.drone_port_details import DronePortDetails  # noqa: E501

class CreateOrUpdateDronePortReferenceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, drone_port_details=None):  # noqa: E501
        """CreateOrUpdateDronePortReferenceResponse - a model defined in OpenAPI

        :param id: The id of this CreateOrUpdateDronePortReferenceResponse.  # noqa: E501
        :type id: str
        :param drone_port_details: The drone_port_details of this CreateOrUpdateDronePortReferenceResponse.  # noqa: E501
        :type drone_port_details: DronePortDetails
        """
        self.openapi_types = {
            'id': str,
            'drone_port_details': DronePortDetails
        }

        self.attribute_map = {
            'id': 'id',
            'drone_port_details': 'drone_port_details'
        }

        self._id = id
        self._drone_port_details = drone_port_details

    @classmethod
    def from_dict(cls, dikt) -> 'CreateOrUpdateDronePortReferenceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateOrUpdateDronePortReferenceResponse of this CreateOrUpdateDronePortReferenceResponse.  # noqa: E501
        :rtype: CreateOrUpdateDronePortReferenceResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this CreateOrUpdateDronePortReferenceResponse.


        :return: The id of this CreateOrUpdateDronePortReferenceResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this CreateOrUpdateDronePortReferenceResponse.


        :param id: The id of this CreateOrUpdateDronePortReferenceResponse.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def drone_port_details(self) -> DronePortDetails:
        """Gets the drone_port_details of this CreateOrUpdateDronePortReferenceResponse.


        :return: The drone_port_details of this CreateOrUpdateDronePortReferenceResponse.
        :rtype: DronePortDetails
        """
        return self._drone_port_details

    @drone_port_details.setter
    def drone_port_details(self, drone_port_details: DronePortDetails):
        """Sets the drone_port_details of this CreateOrUpdateDronePortReferenceResponse.


        :param drone_port_details: The drone_port_details of this CreateOrUpdateDronePortReferenceResponse.
        :type drone_port_details: DronePortDetails
        """
        if drone_port_details is None:
            raise ValueError("Invalid value for `drone_port_details`, must not be `None`")  # noqa: E501

        self._drone_port_details = drone_port_details
