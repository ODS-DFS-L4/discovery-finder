from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from discovery_finder.models.base_model import Model
from discovery_finder import util


class DeleteSubscriptionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, success=None, message=None):  # noqa: E501
        """DeleteSubscriptionResponse - a model defined in OpenAPI

        :param success: The success of this DeleteSubscriptionResponse.  # noqa: E501
        :type success: int
        :param message: The message of this DeleteSubscriptionResponse.  # noqa: E501
        :type message: str
        """
        self.openapi_types = {
            'success': int,
            'message': str
        }

        self.attribute_map = {
            'success': 'success',
            'message': 'message'
        }

        self._success = success
        self._message = message

    @classmethod
    def from_dict(cls, dikt) -> 'DeleteSubscriptionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeleteSubscriptionResponse of this DeleteSubscriptionResponse.  # noqa: E501
        :rtype: DeleteSubscriptionResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def success(self) -> int:
        """Gets the success of this DeleteSubscriptionResponse.


        :return: The success of this DeleteSubscriptionResponse.
        :rtype: int
        """
        return self._success

    @success.setter
    def success(self, success: int):
        """Sets the success of this DeleteSubscriptionResponse.


        :param success: The success of this DeleteSubscriptionResponse.
        :type success: int
        """
        if success is None:
            raise ValueError("Invalid value for `success`, must not be `None`")  # noqa: E501

        self._success = success

    @property
    def message(self) -> str:
        """Gets the message of this DeleteSubscriptionResponse.


        :return: The message of this DeleteSubscriptionResponse.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this DeleteSubscriptionResponse.


        :param message: The message of this DeleteSubscriptionResponse.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")  # noqa: E501

        self._message = message
